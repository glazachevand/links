Фиксированная вёрстка

<meta name="viewport" content="width=1200">

body {
	min-width:1200px;
}

.container{
	width: 1200px;
	margin: 0px auto;
	padding: 0px 15px;
}

=========================================================================

Отвызчивая (резиновая) вёрстка

<meta name="viewport" content="width=device-width">

.container{
	max-width: 1200px;
	margin: 0px auto;
	padding: 0px 15px;
}

Ширину в блоках указывать в %, никаких фиксированных значений

=========================================================================

Адаптивная вёрстка

Используются брейкпойнты. Для ширины блоков никаких фиксированных значений

<meta name="viewport" content="width=device-width">

@media (max-width:1200px){
	.container{
		max-width: 970px;
	}
}
@media (max-width:992px){
	.container{
		max-width: 750px;
	}
}
@media (max-width:767px){
	.container{
		max-width: none;
	}
}

@media (max-width:576px){
	.container{
		max-width: none;
	}
}


@media (max-width:420px){
	
}

=========================================================================

Отзывчиво-адаптивная вёрстка

<meta name="viewport" content="width=device-width">

Сочетание отзывчивой вёрстки и брейкпойнтов

=========================================================================

Приёмы адаптивной вёрстки

1. Медиазапросы 

@media тип устройства (характеристики устройства){
}

Тип устройства:
all 	Подходит для всех типов устройств.
print 	Предназначен для страничных материалов и документов, просматриваемых на экране в режиме предварительного просмотра печати.
screen 	Предназначен в первую очередь для экранов цветных компьютерных мониторов.
speech 	Предназначен для синтезаторов речи.

Характеристики устройства:
width 	
Проверяет ширину области просмотра. Значения задаются в единицах длины, px, em и т.д., например, (width: 800px). Обычно для проверки используются минимальные и максимальные значения ширины.
min-width 
применяет правило если ширина области просмотра больше значения, указанного в запросе, max-width — ширина области просмотра меньше значения, указанного в запросе.
height 	
Проверяет высоту области просмотра. Значения задаются в единицах длины, px, em и т.д., например, (height: 500px). Обычно для проверки используются минимальные и максимальные значения высоты.
min-height 
применяет правило если высота области просмотра больше значения, указанного в запросе, max-height — высота области просмотра которого меньше значения, указанного в запросе.
aspect-ratio 	
Проверяет соотношение ширины к высоте области просмотра. Широкоэкранный дисплей с соотношением сторон 16:9 может быть помечен как (aspect-ratio: 16/9).
min-aspect-ratio 
проверяет минимальное соотношение, max-aspect-ratio — максимальное соотношение ширины к высоте области просмотра.
orientation 	
Проверяет ориентацию области просмотра. Принимает два значения: (orientation: portrait) и (orientation: landscape).
resolution 	
Проверяет разрешение экрана (количество пикселей). Значения также могут проверять количество точек на дюйм (dpi) или количество точек на сантиметр (dpcm), например, (resolution: 300dpi).
min-resolution 
проверяет минимальное разрешение экрана, max-resolution — максимальное.
color 	
Проверяет количество бит на каждый из цветовых компонентов устройства вывода. Например, (min-color: 4) означает, что экран конкретного устройства должен иметь 4-битную глубину цвета.
min-color 
проверяет минимальное количество бит, max-color — максимальное количество бит.
color-index 	
Проверяет количество записей в таблице подстановки цветов. В качестве значения указывается положительное число, например, (color-index: 256).
min-color-index 
проверяет минимальное количество записей, max-color-index — максимальное количество записей.
monochrome 	
Проверяет количество битов на пиксель монохромного устройства. Значение задается целым положительным числом, например, (min-monochrome: 8).
min-monochrome 
проверяет минимальное количество битов, max-monochrome — максимальное количество битов.
-webkit-device-pixel-ratio 	
Задаёт количество физических пикселей устройства на каждый CSS-пиксель.


Комбинации условий медиазапросов:

@media screen and (max-width: 767px) {
}

@media screen and (max-width: 992px), screen and (max-width: 700px) {
}
, or - оператор или

and - оператор и

Медиа-запросы можно также применять в html в head при подключении стилей:

<link rel="stylesheet" media="screen and (color)" href="example.css">

2. <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0">

initial-scale=1.0 - начальный масштаб сайта
maximum-scale=1.0 - запрещаем увеличивать масштаб
user-scalable=0 - запрещаем пользователю масштабировать вёрстку

3. Меню бургер

4. Скрытие второстепенных элементов (например, скрыть в спойлеры)

5. Уменьшить отступы, шрифты

6. Размеры навигационных элементов могут быть и увеличены (кнопки, стрелки д.б. не менее 40px*40px), шрифты

7. Адаптив картинок
img {
	max-width=100%;
}

8. Группировка в коде: стиль для блока и сразу к нему медиа-запросы. В scss медиа-запросы вложены в стили блоков


=========================================================================

mobile first

Сперва под мобильные устройства

@media (min-width:767px){
	
}

=========================================================================

decktops first

Сперва под большие устройства

@media (max-width:1200px){
	
}

=========================================================================

//breakpoints
$projector: 1440px;
$desctop: 1200px;
$laptop: 1200px;
$notebook: 992px;
$tablet: 768px;
$phone: 576px;